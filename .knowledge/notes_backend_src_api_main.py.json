{"is_source_file": true, "format": "Python", "description": "FastAPI application implementing a Notes Backend API with CRUD operations for managing notes.", "external_files": [], "external_methods": [], "published": ["NoteBase", "NoteCreate", "NoteUpdate", "NoteRead", "list_notes", "get_note", "create_note", "update_note", "delete_note", "health_check"], "classes": [{"name": "NoteBase", "description": "Base schema shared across Note models."}, {"name": "NoteCreate", "description": "Schema for creating a new note."}, {"name": "NoteUpdate", "description": "Schema for updating an existing note."}, {"name": "NoteRead", "description": "Schema for reading a note."}, {"name": "InMemoryRepository", "description": "A minimal in-memory repository for Notes, using UUID as identifiers."}], "methods": [{"name": "health_check()", "description": "Health check endpoint returning a simple status.", "scope": "", "scopeKind": ""}, {"name": "List[NoteRead] list_notes(self)", "description": "List all notes currently stored.", "scope": "InMemoryRepository", "scopeKind": "class"}, {"name": "Optional[NoteRead] get_note(self, note_id: Union[int, uuid.UUID])", "description": "Get a note by ID.", "scope": "InMemoryRepository", "scopeKind": "class"}, {"name": "NoteRead create_note(self, data: NoteCreate)", "description": "Create a new note and return it.", "scope": "InMemoryRepository", "scopeKind": "class"}, {"name": "Optional[NoteRead] update_note(self, note_id: Union[int, uuid.UUID], data: NoteUpdate)", "description": "Update an existing note.", "scope": "InMemoryRepository", "scopeKind": "class"}, {"name": "bool delete_note(self, note_id: Union[int, uuid.UUID])", "description": "Delete a note by ID.", "scope": "InMemoryRepository", "scopeKind": "class"}, {"name": "None __init__(self, use_int_ids: bool = False)", "scope": "InMemoryRepository", "scopeKind": "class", "description": "unavailable"}, {"name": "bool _bool_env(var_name: str, default: bool = False)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "Union[int,uuid.UUID] _gen_id(self)", "scope": "InMemoryRepository", "scopeKind": "class", "description": "unavailable"}, {"name": "Union[int,uuid.UUID] _parse_id(id_str: str)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "NoteRead create_note(payload: NoteCreate)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "delete_note( id: str = Path(..., description=\"Note identifier (int or UUID based on configuration)\") )", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "NoteRead get_note( id: str = Path(..., description=\"Note identifier (int or UUID based on configuration)\") )", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "List[NoteRead] list_notes()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "List[NoteRead] search_notes(self, q: str, limit: int = 20, offset: int = 0)", "scope": "InMemoryRepository", "scopeKind": "class", "description": "unavailable"}, {"name": "List[NoteRead] search_notes( q: str = Query(..., description=\"Query string to search in title or content\", min_length=1), limit: int = Query(20, description=\"Maximum number of results to return\", ge=0, le=100), offset: int = Query(0, description=\"Number of results to skip (for pagination)\", ge=0), )", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "NoteRead update_note( payload: NoteUpdate, id: str = Path(..., description=\"Note identifier (int or UUID based on configuration)\"), )", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["os.getenv", "uuid.uuid4", "datetime.utcnow", "HTTPException"], "search-terms": ["FastAPI", "CRUD operations", "Notes Backend", "InMemoryRepository", "health check"], "state": 2, "file_id": 3, "knowledge_revision": 15, "git_revision": "8883b169dd2da4062c51cee5e1afebba9dc56866", "revision_history": [{"9": "9455354eea7cb493484ba68175b18092788bdd49"}, {"10": "9455354eea7cb493484ba68175b18092788bdd49"}, {"15": "8883b169dd2da4062c51cee5e1afebba9dc56866"}], "ctags": [{"_type": "tag", "name": "APP_DESC", "path": "/tmp/kavia/workspace/code-generation/note-keeper-192679-192688/notes_backend/src/api/main.py", "pattern": "/^APP_DESC = ($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "APP_TITLE", "path": "/tmp/kavia/workspace/code-generation/note-keeper-192679-192688/notes_backend/src/api/main.py", "pattern": "/^APP_TITLE = \"Notes Backend API\"$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "APP_VERSION", "path": "/tmp/kavia/workspace/code-generation/note-keeper-192679-192688/notes_backend/src/api/main.py", "pattern": "/^APP_VERSION = \"0.1.0\"$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "InMemoryRepository", "path": "/tmp/kavia/workspace/code-generation/note-keeper-192679-192688/notes_backend/src/api/main.py", "pattern": "/^class InMemoryRepository:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "NoteBase", "path": "/tmp/kavia/workspace/code-generation/note-keeper-192679-192688/notes_backend/src/api/main.py", "pattern": "/^class NoteBase(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "NoteCreate", "path": "/tmp/kavia/workspace/code-generation/note-keeper-192679-192688/notes_backend/src/api/main.py", "pattern": "/^class NoteCreate(NoteBase):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "NoteRead", "path": "/tmp/kavia/workspace/code-generation/note-keeper-192679-192688/notes_backend/src/api/main.py", "pattern": "/^class NoteRead(NoteBase):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "NoteUpdate", "path": "/tmp/kavia/workspace/code-generation/note-keeper-192679-192688/notes_backend/src/api/main.py", "pattern": "/^class NoteUpdate(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "USE_INT_IDS", "path": "/tmp/kavia/workspace/code-generation/note-keeper-192679-192688/notes_backend/src/api/main.py", "pattern": "/^USE_INT_IDS = _bool_env(\"NOTES_USE_INT_IDS\", False)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "__init__", "path": "/tmp/kavia/workspace/code-generation/note-keeper-192679-192688/notes_backend/src/api/main.py", "pattern": "/^    def __init__(self, use_int_ids: bool = False) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self, use_int_ids: bool = False)", "scope": "InMemoryRepository", "scopeKind": "class"}, {"_type": "tag", "name": "_bool_env", "path": "/tmp/kavia/workspace/code-generation/note-keeper-192679-192688/notes_backend/src/api/main.py", "pattern": "/^def _bool_env(var_name: str, default: bool = False) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "function", "signature": "(var_name: str, default: bool = False)"}, {"_type": "tag", "name": "_gen_id", "path": "/tmp/kavia/workspace/code-generation/note-keeper-192679-192688/notes_backend/src/api/main.py", "pattern": "/^    def _gen_id(self) -> Union[int, uuid.UUID]:$/", "language": "Python", "typeref": "typename:Union[int,uuid.UUID]", "kind": "member", "signature": "(self)", "scope": "InMemoryRepository", "scopeKind": "class"}, {"_type": "tag", "name": "_parse_id", "path": "/tmp/kavia/workspace/code-generation/note-keeper-192679-192688/notes_backend/src/api/main.py", "pattern": "/^def _parse_id(id_str: str) -> Union[int, uuid.UUID]:$/", "language": "Python", "typeref": "typename:Union[int,uuid.UUID]", "kind": "function", "signature": "(id_str: str)"}, {"_type": "tag", "name": "allowed_origins", "path": "/tmp/kavia/workspace/code-generation/note-keeper-192679-192688/notes_backend/src/api/main.py", "pattern": "/^allowed_origins = os.getenv(\"CORS_ALLOW_ORIGINS\", \"*\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "app", "path": "/tmp/kavia/workspace/code-generation/note-keeper-192679-192688/notes_backend/src/api/main.py", "pattern": "/^app = FastAPI($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "content", "path": "/tmp/kavia/workspace/code-generation/note-keeper-192679-192688/notes_backend/src/api/main.py", "pattern": "/^    content: Optional[str] = Field(None, description=\"Updated content\\/body of the note\", min_le/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "NoteUpdate", "scopeKind": "class"}, {"_type": "tag", "name": "content", "path": "/tmp/kavia/workspace/code-generation/note-keeper-192679-192688/notes_backend/src/api/main.py", "pattern": "/^    content: str = Field(..., description=\"Content\\/body of the note\", min_length=0)$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "NoteBase", "scopeKind": "class"}, {"_type": "tag", "name": "create_note", "path": "/tmp/kavia/workspace/code-generation/note-keeper-192679-192688/notes_backend/src/api/main.py", "pattern": "/^    def create_note(self, data: NoteCreate) -> NoteRead:$/", "language": "Python", "typeref": "typename:NoteRead", "kind": "member", "signature": "(self, data: NoteCreate)", "scope": "InMemoryRepository", "scopeKind": "class"}, {"_type": "tag", "name": "create_note", "path": "/tmp/kavia/workspace/code-generation/note-keeper-192679-192688/notes_backend/src/api/main.py", "pattern": "/^def create_note(payload: NoteCreate) -> NoteRead:$/", "language": "Python", "typeref": "typename:NoteRead", "kind": "function", "signature": "(payload: NoteCreate)"}, {"_type": "tag", "name": "created_at", "path": "/tmp/kavia/workspace/code-generation/note-keeper-192679-192688/notes_backend/src/api/main.py", "pattern": "/^    created_at: datetime = Field(..., description=\"Creation timestamp (UTC)\")$/", "language": "Python", "typeref": "typename:datetime", "kind": "variable", "scope": "NoteRead", "scopeKind": "class"}, {"_type": "tag", "name": "delete_note", "path": "/tmp/kavia/workspace/code-generation/note-keeper-192679-192688/notes_backend/src/api/main.py", "pattern": "/^    def delete_note(self, note_id: Union[int, uuid.UUID]) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "member", "signature": "(self, note_id: Union[int, uuid.UUID])", "scope": "InMemoryRepository", "scopeKind": "class"}, {"_type": "tag", "name": "delete_note", "path": "/tmp/kavia/workspace/code-generation/note-keeper-192679-192688/notes_backend/src/api/main.py", "pattern": "/^def delete_note($/", "language": "Python", "kind": "function", "signature": "( id: str = Path(..., description=\"Note identifier (int or UUID based on configuration)\") )"}, {"_type": "tag", "name": "get_note", "path": "/tmp/kavia/workspace/code-generation/note-keeper-192679-192688/notes_backend/src/api/main.py", "pattern": "/^    def get_note(self, note_id: Union[int, uuid.UUID]) -> Optional[NoteRead]:$/", "language": "Python", "typeref": "typename:Optional[NoteRead]", "kind": "member", "signature": "(self, note_id: Union[int, uuid.UUID])", "scope": "InMemoryRepository", "scopeKind": "class"}, {"_type": "tag", "name": "get_note", "path": "/tmp/kavia/workspace/code-generation/note-keeper-192679-192688/notes_backend/src/api/main.py", "pattern": "/^def get_note($/", "language": "Python", "typeref": "typename:NoteRead", "kind": "function", "signature": "( id: str = Path(..., description=\"Note identifier (int or UUID based on configuration)\") )"}, {"_type": "tag", "name": "health_check", "path": "/tmp/kavia/workspace/code-generation/note-keeper-192679-192688/notes_backend/src/api/main.py", "pattern": "/^def health_check():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "id", "path": "/tmp/kavia/workspace/code-generation/note-keeper-192679-192688/notes_backend/src/api/main.py", "pattern": "/^    id: Union[int, uuid.UUID] = Field(..., description=\"Unique identifier of the note\")$/", "language": "Python", "typeref": "typename:Union[int, uuid.UUID]", "kind": "variable", "scope": "NoteRead", "scopeKind": "class"}, {"_type": "tag", "name": "list_notes", "path": "/tmp/kavia/workspace/code-generation/note-keeper-192679-192688/notes_backend/src/api/main.py", "pattern": "/^    def list_notes(self) -> List[NoteRead]:$/", "language": "Python", "typeref": "typename:List[NoteRead]", "kind": "member", "signature": "(self)", "scope": "InMemoryRepository", "scopeKind": "class"}, {"_type": "tag", "name": "list_notes", "path": "/tmp/kavia/workspace/code-generation/note-keeper-192679-192688/notes_backend/src/api/main.py", "pattern": "/^def list_notes() -> List[NoteRead]:$/", "language": "Python", "typeref": "typename:List[NoteRead]", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "openapi_tags", "path": "/tmp/kavia/workspace/code-generation/note-keeper-192679-192688/notes_backend/src/api/main.py", "pattern": "/^openapi_tags = [$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "origins", "path": "/tmp/kavia/workspace/code-generation/note-keeper-192679-192688/notes_backend/src/api/main.py", "pattern": "/^    origins = [\"*\"]$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "port", "path": "/tmp/kavia/workspace/code-generation/note-keeper-192679-192688/notes_backend/src/api/main.py", "pattern": "/^    port = int(os.getenv(\"PORT\", \"3001\"))$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "repo", "path": "/tmp/kavia/workspace/code-generation/note-keeper-192679-192688/notes_backend/src/api/main.py", "pattern": "/^repo = InMemoryRepository(use_int_ids=USE_INT_IDS)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "search_notes", "path": "/tmp/kavia/workspace/code-generation/note-keeper-192679-192688/notes_backend/src/api/main.py", "pattern": "/^    def search_notes(self, q: str, limit: int = 20, offset: int = 0) -> List[NoteRead]:$/", "language": "Python", "typeref": "typename:List[NoteRead]", "kind": "member", "signature": "(self, q: str, limit: int = 20, offset: int = 0)", "scope": "InMemoryRepository", "scopeKind": "class"}, {"_type": "tag", "name": "search_notes", "path": "/tmp/kavia/workspace/code-generation/note-keeper-192679-192688/notes_backend/src/api/main.py", "pattern": "/^def search_notes($/", "language": "Python", "typeref": "typename:List[NoteRead]", "kind": "function", "signature": "( q: str = Query(..., description=\"Query string to search in title or content\", min_length=1), limit: int = Query(20, description=\"Maximum number of results to return\", ge=0, le=100), offset: int = Query(0, description=\"Number of results to skip (for pagination)\", ge=0), )"}, {"_type": "tag", "name": "title", "path": "/tmp/kavia/workspace/code-generation/note-keeper-192679-192688/notes_backend/src/api/main.py", "pattern": "/^    title: Optional[str] = Field(None, description=\"Updated title of the note\", min_length=1, ma/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "NoteUpdate", "scopeKind": "class"}, {"_type": "tag", "name": "title", "path": "/tmp/kavia/workspace/code-generation/note-keeper-192679-192688/notes_backend/src/api/main.py", "pattern": "/^    title: str = Field(..., description=\"Title of the note\", min_length=1, max_length=500)$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "NoteBase", "scopeKind": "class"}, {"_type": "tag", "name": "update_note", "path": "/tmp/kavia/workspace/code-generation/note-keeper-192679-192688/notes_backend/src/api/main.py", "pattern": "/^    def update_note(self, note_id: Union[int, uuid.UUID], data: NoteUpdate) -> Optional[NoteRead/", "language": "Python", "typeref": "typename:Optional[NoteRead]", "kind": "member", "signature": "(self, note_id: Union[int, uuid.UUID], data: NoteUpdate)", "scope": "InMemoryRepository", "scopeKind": "class"}, {"_type": "tag", "name": "update_note", "path": "/tmp/kavia/workspace/code-generation/note-keeper-192679-192688/notes_backend/src/api/main.py", "pattern": "/^def update_note($/", "language": "Python", "typeref": "typename:NoteRead", "kind": "function", "signature": "( payload: NoteUpdate, id: str = Path(..., description=\"Note identifier (int or UUID based on configuration)\"), )"}, {"_type": "tag", "name": "updated_at", "path": "/tmp/kavia/workspace/code-generation/note-keeper-192679-192688/notes_backend/src/api/main.py", "pattern": "/^    updated_at: datetime = Field(..., description=\"Last update timestamp (UTC)\")$/", "language": "Python", "typeref": "typename:datetime", "kind": "variable", "scope": "NoteRead", "scopeKind": "class"}], "hash": "add864f1ec936aba0c2422451711752c", "format-version": 4, "code-base-name": "notes_backend", "filename": "notes_backend/src/api/main.py", "fields": [{"name": "APP_DESC = (", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "APP_TITLE = \"Notes Backend API\"", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "APP_VERSION = \"0.1.0\"", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "USE_INT_IDS = _bool_env(\"NOTES_USE_INT_IDS\", False)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "allowed_origins = os.getenv(\"CORS_ALLOW_ORIGINS\", \"*\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "app = FastAPI(", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "Optional[str] content", "scope": "NoteUpdate", "scopeKind": "class", "description": "unavailable"}, {"name": "str content", "scope": "NoteBase", "scopeKind": "class", "description": "unavailable"}, {"name": "datetime created_at", "scope": "NoteRead", "scopeKind": "class", "description": "unavailable"}, {"name": "Union[int, uuid.UUID] id", "scope": "NoteRead", "scopeKind": "class", "description": "unavailable"}, {"name": "openapi_tags = [", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "origins = [\"*\"]", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "port = int(os.getenv(\"PORT\", \"3001\"))", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "repo = InMemoryRepository(use_int_ids=USE_INT_IDS)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "Optional[str] title", "scope": "NoteUpdate", "scopeKind": "class", "description": "unavailable"}, {"name": "str title", "scope": "NoteBase", "scopeKind": "class", "description": "unavailable"}, {"name": "datetime updated_at", "scope": "NoteRead", "scopeKind": "class", "description": "unavailable"}]}